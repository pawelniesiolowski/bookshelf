C:37:"PHPUnit\Runner\DefaultTestResultCache":12056:{a:2:{s:7:"defects";a:43:{s:66:"App\Tests\BookAction\Controller\BookshelfControllerTest::testIndex";i:4;s:80:"App\Tests\BookAction\Controller\BookshelfControllerTest::testItShouldReceiveBook";i:4;s:117:"App\Tests\BookAction\Controller\BookshelfControllerTest::testItShouldReturnProperErrorWhenReceivesBookWithEmptyString";i:4;s:80:"App\Tests\BookAction\Controller\BookshelfControllerTest::testItShouldReleaseBook";i:4;s:116:"App\Tests\BookAction\Controller\BookshelfControllerTest::testItShouldReturnProperErrorWhenReleaseBookWithEmptyString";i:4;s:113:"App\Tests\BookAction\Controller\BookshelfControllerTest::testItShouldReturnProperErrorsWhenReceiverIdDoesNotExist";i:4;s:116:"App\Tests\BookAction\Controller\BookshelfControllerTest::testItShouldReturnProperErrorsWhenReceiverIdIsOfInvalidType";i:4;s:116:"App\Tests\BookAction\Controller\BookshelfControllerTest::testItShouldReturnProperErrorsWhenThereIsLessCopiesThenZero";i:4;s:77:"App\Tests\BookAction\Controller\BookshelfControllerTest::testItShouldSellBook";i:4;s:114:"App\Tests\BookAction\Controller\BookshelfControllerTest::testItShouldReturnProperErrorWhenSellsBookWithEmptyString";i:4;s:74:"App\Tests\BookAction\Persistence\BookChangeEventTest::testReceiveBookEvent";i:4;s:95:"App\Tests\BookAction\Persistence\BookChangeEventTest::testItThrowsExcpetionIfEventNameIsInvalid";i:3;s:130:"App\Tests\BookAction\Persistence\BookChangeEventTest::testItThrowsExceptionWhenNumberOfBooksIsLessOrEqualThenZero with data set #0";i:3;s:130:"App\Tests\BookAction\Persistence\BookChangeEventTest::testItThrowsExceptionWhenNumberOfBooksIsLessOrEqualThenZero with data set #1";i:3;s:75:"App\Tests\BookAction\Persistence\BookChangeEventTest::testReleaseBooksEvent";i:4;s:86:"App\Tests\BookAction\Persistence\BookChangeEventTest::testReleaseBooksEventWithComment";i:4;s:71:"App\Tests\BookAction\Persistence\BookChangeEventTest::testSellBookEvent";i:4;s:94:"App\Tests\BookAction\Persistence\BookChangeEventTest::testItCreatesTextFromReceiverPerspective";i:4;s:105:"App\Tests\BookAction\Persistence\BookChangeEventTest::testItCreatesTextFromReceiverPerspectiveWithComment";i:4;s:98:"App\Tests\Catalog\Controller\BookControllerTest::testNewShouldCreateNewBookAndMaybeBookChangeEvent";i:4;s:69:"App\Tests\Catalog\Controller\BookControllerTest::testItShouldEditBook";i:4;s:62:"App\Catalog\Factory\BookFactoryTest::testItCreatesBookFromJson";i:4;s:84:"App\Tests\Catalog\Persistence\BookTest::testItShouldCreateJsonSerializedExtendedData";i:4;s:55:"App\Tests\Catalog\Persistence\BookTest::testReceiveBook";i:4;s:56:"App\Tests\Catalog\Persistence\BookTest::testReleaseBooks";i:4;s:53:"App\Tests\Catalog\Persistence\BookTest::testSellBooks";i:4;s:95:"App\Tests\Catalog\Persistence\BookTest::testItShouldThrowExceptionWhenThereAreLessThenZeroBooks";i:4;s:72:"App\Tests\Catalog\Persistence\BookTest::testItShouldUpdateItselfFromJson";i:4;s:84:"App\Tests\Catalog\Repository\AuthorRepositoryTest::testItShouldGetAuthorFromDatabase";i:4;s:90:"App\Tests\Catalog\Repository\AuthorRepositoryTest::testItShouldGetAllAuthorsOrderBySurname";i:4;s:91:"App\Tests\Catalog\Repository\AuthorRepositoryTest::testItShouldGetOneAuthorByNameAndSurname";i:4;s:115:"App\Tests\Catalog\Repository\AuthorRepositoryTest::testItShouldThrowExceptionWhenThereAreTwoAuthorsByNameAndSurname";i:4;s:80:"App\Tests\Catalog\Repository\BookRepositoryTest::testItShouldGetBookFromDatabase";i:4;s:84:"App\Tests\Catalog\Repository\BookRepositoryTest::testItShouldGetAllBooksFromDatabase";i:4;s:87:"App\Tests\Catalog\Repository\BookRepositoryTest::testItShouldFindAllBooksOrderedByTitle";i:4;s:83:"App\Tests\Receiver\Controller\ReceiverControllerTest::testItShouldCreateNewReceiver";i:3;s:109:"App\Tests\Receiver\Controller\ReceiverControllerTest::testItShouldIndexNonDeletedReceiversInAlfabethicalOrder";i:4;s:80:"App\Tests\Receiver\Controller\ReceiverControllerTest::testItShuldGetReceiverById";i:4;s:80:"App\Tests\Receiver\Controller\ReceiverControllerTest::testItShouldDeleteReceiver";i:4;s:78:"App\Tests\Receiver\Controller\ReceiverControllerTest::testItShouldEditReceiver";i:4;s:70:"App\Tests\Receiver\Persistence\ReceiverTest::testItCanBeJsonSerialized";i:4;s:77:"App\Tests\Receiver\Repository\ReceiverRepositoryTest::testItShouldFindOneById";i:4;s:102:"App\Tests\Receiver\Repository\ReceiverRepositoryTest::testItShouldFindAllNonDeletedOrderAlfabethically";i:4;}s:5:"times";a:78:{s:66:"App\Tests\BookAction\Controller\BookshelfControllerTest::testIndex";d:0.871;s:80:"App\Tests\BookAction\Controller\BookshelfControllerTest::testItShouldReceiveBook";d:0.052;s:117:"App\Tests\BookAction\Controller\BookshelfControllerTest::testItShouldReturnProperErrorWhenReceivesBookWithEmptyString";d:0.058;s:80:"App\Tests\BookAction\Controller\BookshelfControllerTest::testItShouldReleaseBook";d:0.051;s:116:"App\Tests\BookAction\Controller\BookshelfControllerTest::testItShouldReturnProperErrorWhenReleaseBookWithEmptyString";d:0.061;s:113:"App\Tests\BookAction\Controller\BookshelfControllerTest::testItShouldReturnProperErrorsWhenReceiverIdDoesNotExist";d:0.068;s:116:"App\Tests\BookAction\Controller\BookshelfControllerTest::testItShouldReturnProperErrorsWhenReceiverIdIsOfInvalidType";d:0.05;s:116:"App\Tests\BookAction\Controller\BookshelfControllerTest::testItShouldReturnProperErrorsWhenThereIsLessCopiesThenZero";d:0.057;s:77:"App\Tests\BookAction\Controller\BookshelfControllerTest::testItShouldSellBook";d:0.061;s:114:"App\Tests\BookAction\Controller\BookshelfControllerTest::testItShouldReturnProperErrorWhenSellsBookWithEmptyString";d:0.059;s:74:"App\Tests\BookAction\Persistence\BookChangeEventTest::testReceiveBookEvent";d:0.01;s:95:"App\Tests\BookAction\Persistence\BookChangeEventTest::testItThrowsExcpetionIfEventNameIsInvalid";d:0.001;s:130:"App\Tests\BookAction\Persistence\BookChangeEventTest::testItThrowsExceptionWhenNumberOfBooksIsLessOrEqualThenZero with data set #0";d:0.001;s:130:"App\Tests\BookAction\Persistence\BookChangeEventTest::testItThrowsExceptionWhenNumberOfBooksIsLessOrEqualThenZero with data set #1";d:0.001;s:75:"App\Tests\BookAction\Persistence\BookChangeEventTest::testReleaseBooksEvent";d:0;s:86:"App\Tests\BookAction\Persistence\BookChangeEventTest::testReleaseBooksEventWithComment";d:0;s:71:"App\Tests\BookAction\Persistence\BookChangeEventTest::testSellBookEvent";d:0;s:94:"App\Tests\BookAction\Persistence\BookChangeEventTest::testItCreatesTextFromReceiverPerspective";d:0;s:105:"App\Tests\BookAction\Persistence\BookChangeEventTest::testItCreatesTextFromReceiverPerspectiveWithComment";d:0;s:98:"App\Tests\Catalog\Controller\BookControllerTest::testNewShouldCreateNewBookAndMaybeBookChangeEvent";d:0.145;s:106:"App\Tests\Catalog\Controller\BookControllerTest::testNewWithInvalidDataShouldCauseResponseWithProperErrors";d:0.122;s:69:"App\Tests\Catalog\Controller\BookControllerTest::testItShouldEditBook";d:0.06;s:62:"App\Catalog\Factory\BookFactoryTest::testItCreatesBookFromJson";d:0.001;s:67:"App\Catalog\Factory\BookFactoryTest::testItCreatesBookFromEmptyData";d:0.001;s:85:"App\Catalog\Factory\BookFactoryTest::testItCreatesBookWhenPriceAndISBNAreEmptyStrings";d:0;s:67:"App\Tests\Catalog\Persistence\AuthorTest::testItCanBeJsonSerialized";d:0;s:65:"App\Tests\Catalog\Persistence\AuthorTest::testItCanBeUsedAsString";d:0;s:91:"App\Tests\Catalog\Persistence\AuthorTest::testAuthorWithInvalidDataShouldReturnProperErrors";d:0;s:65:"App\Tests\Catalog\Persistence\BookTest::testItCanBeJsonSerialized";d:0;s:57:"App\Tests\Catalog\Persistence\BookTest::testDefaultValues";d:0;s:84:"App\Tests\Catalog\Persistence\BookTest::testItShouldCreateJsonSerializedExtendedData";d:0;s:76:"App\Tests\Catalog\Persistence\BookTest::testItCreatesJsonSerializedBasicData";d:0;s:63:"App\Tests\Catalog\Persistence\BookTest::testItCanBeUsedAsString";d:0;s:55:"App\Tests\Catalog\Persistence\BookTest::testReceiveBook";d:0;s:56:"App\Tests\Catalog\Persistence\BookTest::testReleaseBooks";d:0;s:53:"App\Tests\Catalog\Persistence\BookTest::testSellBooks";d:0;s:95:"App\Tests\Catalog\Persistence\BookTest::testItShouldThrowExceptionWhenThereAreLessThenZeroBooks";d:0;s:99:"App\Tests\Catalog\Persistence\BookTest::testItShouldThrowExceptionWhenReceiveMethodGetsLessThenZero";d:0;s:87:"App\Tests\Catalog\Persistence\BookTest::testItShouldValidateItselfAndReturnProperErrors";d:0;s:72:"App\Tests\Catalog\Persistence\BookTest::testItShouldUpdateItselfFromJson";d:0;s:74:"App\Tests\Catalog\Persistence\BookTest::testISBNWithTenDigitsShouldBeValid";d:0;s:79:"App\Tests\Catalog\Persistence\BookTest::testISBNWithThirteenDigitsShouldBeValid";d:0;s:94:"App\Tests\Catalog\Persistence\BookTest::testISBNWithTwelveDigitsAndXAndFourDashesShouldBeValid";d:0;s:96:"App\Tests\Catalog\Persistence\BookTest::testItShouldEmitErrorWhenISBNHasInvalidNumberOfDigitsOrX";d:0;s:79:"App\Tests\Catalog\Persistence\BookTest::testISBNShouldHaveOnlyNumbersDashesAndX";d:0;s:87:"App\Tests\Catalog\Provider\AuthorProviderTest::testItProvidesAllAuthorsOrderedBySurname";d:0.002;s:83:"App\Tests\Catalog\Provider\AuthorProviderTest::testItProvidesAuthorByNameAndSurname";d:0.001;s:68:"App\Tests\Catalog\Provider\BookProviderTest::testItShouldFindOneBook";d:0.001;s:100:"App\Tests\Catalog\Provider\BookProviderTest::testFindOneShuldReturnBookExceptionWhenBookDoesNotExist";d:0;s:84:"App\Tests\Catalog\Provider\BookProviderTest::testItCansGetAllOrderedByAuthorAndTitle";d:0.001;s:84:"App\Tests\Catalog\Repository\AuthorRepositoryTest::testItShouldGetAuthorFromDatabase";d:0.054;s:90:"App\Tests\Catalog\Repository\AuthorRepositoryTest::testItShouldGetAllAuthorsOrderBySurname";d:0.074;s:91:"App\Tests\Catalog\Repository\AuthorRepositoryTest::testItShouldGetOneAuthorByNameAndSurname";d:0.055;s:108:"App\Tests\Catalog\Repository\AuthorRepositoryTest::testItShouldReturnNullWhenThereIsNoAuthorByNameAndSurname";d:0.055;s:115:"App\Tests\Catalog\Repository\AuthorRepositoryTest::testItShouldThrowExceptionWhenThereAreTwoAuthorsByNameAndSurname";d:0.056;s:80:"App\Tests\Catalog\Repository\BookRepositoryTest::testItShouldGetBookFromDatabase";d:0.057;s:84:"App\Tests\Catalog\Repository\BookRepositoryTest::testItShouldGetAllBooksFromDatabase";d:0.058;s:87:"App\Tests\Catalog\Repository\BookRepositoryTest::testItShouldFindAllBooksOrderedByTitle";d:0.082;s:83:"App\Tests\Receiver\Controller\ReceiverControllerTest::testItShouldCreateNewReceiver";d:0.538;s:109:"App\Tests\Receiver\Controller\ReceiverControllerTest::testItShouldIndexNonDeletedReceiversInAlfabethicalOrder";d:0.058;s:80:"App\Tests\Receiver\Controller\ReceiverControllerTest::testItShuldGetReceiverById";d:0.049;s:80:"App\Tests\Receiver\Controller\ReceiverControllerTest::testItShouldDeleteReceiver";d:0.059;s:78:"App\Tests\Receiver\Controller\ReceiverControllerTest::testItShouldEditReceiver";d:0.068;s:82:"App\Tests\Receiver\Factory\ReceiverFactoryTest::testItShouldCreateReceiverFromJson";d:0;s:65:"App\Tests\Receiver\Persistence\ReceiverTest::testReceiverCreation";d:0;s:70:"App\Tests\Receiver\Persistence\ReceiverTest::testItCanBeJsonSerialized";d:0.002;s:88:"App\Tests\Receiver\Persistence\ReceiverTest::testItShouldReturnErrorsWhenGetsInvalidData";d:0;s:77:"App\Tests\Receiver\Persistence\ReceiverTest::testItShouldBeEditedFromJsonData";d:0;s:78:"App\Tests\Receiver\Provider\ReceiverProviderTest::testItShouldFindReceiverById";d:0.002;s:78:"App\Tests\Receiver\Provider\ReceiverProviderTest::testItShouldFindAllReceivers";d:0;s:77:"App\Tests\Receiver\Repository\ReceiverRepositoryTest::testItShouldFindOneById";d:0.054;s:102:"App\Tests\Receiver\Repository\ReceiverRepositoryTest::testItShouldFindAllNonDeletedOrderAlfabethically";d:0.058;s:57:"App\Tests\Shared\Entity\UserTest::testItCanBeUsedAsString";d:0;s:69:"App\Tests\Shared\Tool\TextProcessorTest::testTrimDataWithOneDeepLevel";d:0;s:69:"App\Tests\Shared\Tool\TextProcessorTest::testTrimDataWithTwoDeepLevel";d:0;s:67:"App\Tests\Shared\Tool\TextProcessorTest::testTrimDataWithEmptyArray";d:0;s:76:"App\Tests\Shared\Tool\TextProcessorTest::testTrimDataWithArrayWithEmptyArray";d:0;s:70:"App\Tests\Shared\Tool\TextProcessorTest::testTrimDataWithArrayWithNull";d:0;}}}